import * as Yup from 'yup'

export const PersonalInfoFieldConfigs = [
	{
		id: 'firstName',
		name: 'firstName',
		type: 'text',
		placeholder: 'Enter your first name',
		label: 'First Name',
		required: true,
		validation: Yup.string().required('First Name is required'),
	},
	{
		id: 'lastName',
		name: 'lastName',
		type: 'text',
		placeholder: 'Enter your last name',
		label: 'Last Name',
		required: true,
		validation: Yup.string().required('Last Name is required'),
	},
	{
		id: 'age',
		name: 'age',
		type: 'number',
		placeholder: 'Enter your age',
		label: 'Age',
		required: true,
		validation: Yup.number()
			.required('Age is required')
			.positive('Age must be a positive number')
			.integer('Age must be an integer'),
	},
	{
		id: 'gender',
		name: 'gender',
		type: 'select',
		placeholder: 'Select your gender',
		label: 'Gender',
		required: true,
		options: [
			{ value: 'male', label: 'Male' },
			{ value: 'female', label: 'Female' },
		],
		validation: Yup.string().required('Gender is required'),
	},
	{
		id: 'phoneNumber',
		name: 'phoneNumber',
		type: 'text',
		placeholder: 'Enter your phone number',
		label: 'Phone Number',
		required: true,
		validation: Yup.string().required('Phone Number is required'),
	},
	{
		id: 'woreda',
		name: 'woreda',
		type: 'text',
		placeholder: 'Enter your woreda',
		label: 'Woreda',
		required: true,
		validation: Yup.string().required('Woreda is required'),
	},
	{
		id: 'kebele',
		name: 'kebele',
		type: 'text',
		placeholder: 'Enter your kebele',
		label: 'Kebele',
		required: true,
		validation: Yup.string().required('Kebele is required'),
	},
	{
		id: 'houseNumber',
		name: 'houseNumber',
		type: 'text',
		placeholder: 'Enter your house number',
		label: 'House Number',
		required: true,
		validation: Yup.string().required('House Number is required'),
	},
	{
		id: 'cardNumber',
		name: 'cardNumber',
		type: 'text',
		placeholder: 'Enter your card number',
		label: 'Card Number',
		required: true,
		validation: Yup.string().required('Card Number is required'),
	},
]

export const ClinicalFindingsFieldConfigs = [
	{
		id: 'referralTypeId',
		name: 'referralTypeId',
		type: 'select',
		placeholder: 'Select referral type',
		label: 'Referral Type',
		required: true,
		options: [
			{ value: 1, label: 'Cold' },
			{ value: 2, label: 'Emergency' },
		],
		validation: Yup.number().required('Referral Type is required'),
	},
	{
		id: 'clinicalFindings',
		name: 'clinicalFindings',
		type: 'text_area',
		placeholder: 'Enter clinical findings',
		label: 'Clinical Findings',
		required: true,
		validation: Yup.string().required('Clinical Findings is required'),
	},
	{
		id: 'diagnosis',
		name: 'diagnosis',
		type: 'text_area',
		placeholder: 'Enter diagnosis',
		label: 'Diagnosis',
		required: true,
		validation: Yup.string().required('Diagnosis is required'),
	},
	{
		id: 'investigationResult',
		name: 'investigationResult',
		type: 'text_area',
		placeholder: 'Enter investigation result',
		label: 'Investigation Result',
		required: true,
		validation: Yup.string().required('Investigation Result is required'),
	},
	{
		id: 'rxGiven',
		name: 'rxGiven',
		type: 'text_area',
		placeholder: 'Enter Rx given',
		label: 'Rx Given',
		required: true,
		validation: Yup.string().required('Rx Given is required'),
	},
	{
		id: 'reasonForReferral',
		name: 'reasonForReferral',
		type: 'text_area',
		placeholder: 'Enter reason for referral',
		label: 'Reason For Referral',
		required: true,
		validation: Yup.string().required('Reason For Referral is required'),
	},
	{
		id: 'nameOfPhysician',
		name: 'nameOfPhysician',
		type: 'text',
		placeholder: 'Enter name of physician',
		label: 'Name Of Physician',
		required: true,
		validation: Yup.string().required('Name Of Physician is required'),
	},
]

// export const referralOutColumnsConfig = [
// 	{
// 		title: 'Facility Name',
// 		dataIndex: 'facilityName',
// 		key: 'facilityName',
// 		responsive: ['sm', 'md', 'lg'],
// 		width: 150,
// 	},
// 	{
// 		title: 'Facility Type',
// 		dataIndex: 'facilityType',
// 		key: 'facilityType',
// 		responsive: ['sm', 'md', 'lg'],
// 		width: 200,
// 	},
// 	{
// 		title: 'Status',
// 		dataIndex: 'isActive',
// 		key: 'isActive',
// 		responsive: ['sm', 'md', 'lg'],
// 		width: 80,
// 	},
// 	{
// 		title: 'Contact Number',
// 		dataIndex: 'contactNumber',
// 		key: 'contactNumber',
// 		responsive: ['sm', 'md', 'lg'],
// 		width: 150,
// 	},
// 	{
// 		title: '',
// 		dataIndex: 'actions',
// 		key: 'actions',
// 		responsive: ['sm', 'md', 'lg'],
// 		width: 80,
// 	},
// ]

export const referralOutColumnsConfig = [
	{
		title: 'Facility Name',
		dataIndex: 'facilityName',
		key: 'facilityName',
		responsive: ['sm', 'md', 'lg'],
		width: 150,
	},
	{
		title: 'Patient Full Name',
		dataIndex: 'fullName',
		key: 'fullName',
		responsive: ['sm', 'md', 'lg'],
		width: 100,
		render: (text, record) => `${record.firstName} ${record.lastName}`, // Combine first and last name
	},
	{
		title: 'Card Number',
		dataIndex: 'cardNumber',
		key: 'cardNumber',
		responsive: ['sm', 'md', 'lg'],
		width: 100,
	},
	{
		title: 'Referral Type',
		dataIndex: 'referralTypeId',
		key: 'referralTypeId',
		responsive: ['sm', 'md', 'lg'],
		width: 100,
		render: (text) => (text === 1 ? 'Cold' : 'Emergency'), // Render referral type based on value
	},
	{
		title: 'Reason for Referral',
		dataIndex: 'reasonForReferral',
		key: 'reasonForReferral',
		responsive: ['sm', 'md', 'lg'],
		width: 100,
	},
	{
		title: 'Status',
		dataIndex: 'status',
		key: 'status',
		responsive: ['sm', 'md', 'lg'],
		width: 60,
	},
]
